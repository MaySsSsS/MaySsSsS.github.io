{"version":3,"file":"js/792.07142f33.js","mappings":"0KAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,UAAU,CAACG,MAAM,CAAC,KAAO,eAAeC,MAAM,CAACC,MAAOP,EAAIQ,WAAYC,SAAS,SAAUC,GAAMV,EAAIQ,WAAWE,CAAG,EAAEC,WAAW,eAAe,CAACT,EAAG,cAAc,CAACG,MAAM,CAAC,MAAQ,KAAK,KAAO,UAAU,CAACH,EAAG,UAAU,CAACU,IAAI,aAAa,CAACV,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,OAAO,CAACH,EAAG,WAAW,CAACI,MAAM,CAACC,MAAOP,EAAIa,aAAcJ,SAAS,SAAUC,GAAMV,EAAIa,aAAaH,CAAG,EAAEC,WAAW,mBAAmB,GAAGT,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,OAAO,CAACH,EAAG,WAAW,CAACG,MAAM,CAAC,KAAO,YAAYC,MAAM,CAACC,MAAOP,EAAIc,SAAUL,SAAS,SAAUC,GAAMV,EAAIc,SAASd,EAAIe,GAAGL,EAAI,EAAEC,WAAW,eAAe,GAAGT,EAAG,eAAe,CAACA,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,WAAWW,GAAG,CAAC,MAAQhB,EAAIiB,QAAQ,CAACjB,EAAIkB,GAAG,QAAQhB,EAAG,YAAY,CAACc,GAAG,CAAC,MAAQ,SAASG,GAAQ,OAAOnB,EAAIoB,QAAQC,QAAQ,CAACC,KAAM,KAAK,IAAI,CAACtB,EAAIkB,GAAG,WAAW,IAAI,IAAI,GAAGhB,EAAG,cAAc,CAACG,MAAM,CAAC,MAAQ,KAAK,KAAO,UAAU,CAACH,EAAG,UAAU,CAACU,IAAI,aAAa,CAACV,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,OAAO,CAACH,EAAG,WAAW,CAACI,MAAM,CAACC,MAAOP,EAAIuB,aAAcd,SAAS,SAAUC,GAAMV,EAAIuB,aAAab,CAAG,EAAEC,WAAW,mBAAmB,GAAGT,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,OAAO,CAACH,EAAG,WAAW,CAACG,MAAM,CAAC,KAAO,YAAYC,MAAM,CAACC,MAAOP,EAAIwB,SAAUf,SAAS,SAAUC,GAAMV,EAAIwB,SAASxB,EAAIe,GAAGL,EAAI,EAAEC,WAAW,eAAe,GAAGT,EAAG,eAAe,CAACA,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,WAAWW,GAAG,CAAC,MAAQhB,EAAIyB,QAAQ,CAACzB,EAAIkB,GAAG,SAAS,IAAI,IAAI,IAAI,IAAI,IACv+C,EACIQ,EAAkB,G,mBC2CtB,GACAC,KAAA,UACAC,IAAAA,GACA,OACApB,WAAA,QACAK,aAAA,GACAC,SAAA,GACAS,aAAA,GACAC,SAAA,GAEA,EACAK,QAAA,CACA,WAAAZ,GACA,IAAAa,EAAA,CACAC,QAAA,KAAAlB,aACAmB,IAAA,KAAAlB,UAEA,MAAAmB,QAAA,KAAAC,OAAAC,SAAA,QAAAL,GACA,QAAAG,EAAA,CAEA,QAAAG,KAAAC,EAAAA,EAAAA,GAAA,KAAAH,OAAAI,MAAAC,UAAAC,KAAAC,EAAAA,IACA,KAAArB,QAAAsB,SAAAN,GAEA,KAAAO,SAAAC,QAAA,SACA,KAAAxB,QAAAC,QAAA,CAAAC,KAAA,KACA,MACA,KAAAqB,SAAAE,MAAA,WAEA,EACApB,KAAAA,GAyBA,ICnGsP,I,UCQlPqB,GAAY,OACd,EACA/C,EACA2B,GACA,EACA,KACA,WACA,MAIF,EAAeoB,EAAiB,O","sources":["webpack://base-admin-vue2/./src/pages/MyLogin.vue","webpack://base-admin-vue2/src/pages/MyLogin.vue","webpack://base-admin-vue2/./src/pages/MyLogin.vue?bb3f","webpack://base-admin-vue2/./src/pages/MyLogin.vue?a451"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"login\"},[_c('div',{staticClass:\"container\"},[_c('el-tabs',{attrs:{\"type\":\"border-card\"},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"登录\",\"name\":\"login\"}},[_c('el-form',{ref:\"loginForm\"},[_c('el-form-item',{attrs:{\"label\":\"账号\"}},[_c('el-input',{model:{value:(_vm.loginAccount),callback:function ($$v) {_vm.loginAccount=$$v},expression:\"loginAccount\"}})],1),_c('el-form-item',{attrs:{\"label\":\"密码\"}},[_c('el-input',{attrs:{\"type\":\"password\"},model:{value:(_vm.loginPwd),callback:function ($$v) {_vm.loginPwd=_vm._n($$v)},expression:\"loginPwd\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.Login}},[_vm._v(\"登录\")]),_c('el-button',{on:{\"click\":function($event){return _vm.$router.replace({path: '/'})}}},[_vm._v(\"前往主页\")])],1)],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"注册\",\"name\":\"setup\"}},[_c('el-form',{ref:\"setupForm\"},[_c('el-form-item',{attrs:{\"label\":\"账号\"}},[_c('el-input',{model:{value:(_vm.setupAccount),callback:function ($$v) {_vm.setupAccount=$$v},expression:\"setupAccount\"}})],1),_c('el-form-item',{attrs:{\"label\":\"密码\"}},[_c('el-input',{attrs:{\"type\":\"password\"},model:{value:(_vm.setupPwd),callback:function ($$v) {_vm.setupPwd=_vm._n($$v)},expression:\"setupPwd\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.setup}},[_vm._v(\"注册\")])],1)],1)],1)],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Login -->\r\n<template>\r\n    <div class=\"login\">\r\n        <div class=\"container\">\r\n            <el-tabs v-model=\"activeName\" type=\"border-card\">\r\n                <el-tab-pane label=\"登录\" name=\"login\">\r\n                    \r\n                    <el-form ref=\"loginForm\">\r\n                        <el-form-item label=\"账号\">\r\n                            <el-input v-model=\"loginAccount\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\">\r\n                            <el-input type=\"password\"  v-model.number=\"loginPwd\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button type=\"primary\" @click=\"Login\">登录</el-button>\r\n                            <el-button @click=\"$router.replace({path: '/'})\">前往主页</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"注册\" name=\"setup\">\r\n\r\n                    <el-form ref=\"setupForm\">\r\n                        <el-form-item label=\"账号\">\r\n                            <el-input v-model=\"setupAccount\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\">\r\n                            <el-input type=\"password\"  v-model.number=\"setupPwd\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button type=\"primary\" @click=\"setup\">注册</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { matchRoutes } from '@/utils/matchRoutes'\r\nimport { dynamicRoutes } from '@/router';\r\nexport default {\r\n    name: 'MyLogin',\r\n    data() {\r\n        return {\r\n            activeName: 'login',\r\n            loginAccount:'',\r\n            loginPwd:'',\r\n            setupAccount:'',\r\n            setupPwd:'',\r\n        }\r\n    },\r\n    methods: {\r\n        async Login() {\r\n            let user = {\r\n                account: this.loginAccount,\r\n                pwd: this.loginPwd,\r\n            }\r\n            const res = await this.$store.dispatch('login', user)\r\n            if (res === true){\r\n                // 更新动态路由\r\n                for (let item of matchRoutes(this.$store.state.UserStore.auth, dynamicRoutes)) {\r\n                    this.$router.addRoute(item)\r\n                }\r\n                this.$message.success('登录成功！');\r\n                this.$router.replace({path: '/'})\r\n            } else {\r\n                this.$message.error('账号或密码错误！');\r\n            }\r\n        },\r\n        setup() {\r\n            // // 判断账号密码\r\n            // if (this.setupAccount === '' || this.setupPwd === '') this.$message.error('账号或密码不能为空！');\r\n            // else {\r\n            //     let account = this.$store.state.UserStore.users.filter(item => item.id === this.setupAccount)\r\n            //     if (account.length === 0){\r\n            //         // 没有该账号，进行注册操作\r\n            //         this.$store.state.UserStore.users.push({\r\n            //             'id':this.setupAccount,\r\n            //             'password':this.setupPwd,\r\n            //             'form':{\r\n            //                 websocket:false,\r\n            //                 Dashboard:true,\r\n            //                 MyPromise:false,\r\n            //                 MyCss:false,\r\n            //                 MyStructure:false,\r\n            //                 AuthorityManagement:true\r\n            //             }\r\n            //         })\r\n            //         window.localStorage.setItem('UserInfo', JSON.stringify(this.$store.state.UserStore.users))\r\n            //         this.$message.success('注册成功，请登录！');\r\n            //         this.activeName = 'login'\r\n            //     } else {\r\n            //         this.$message.error('账号已存在，请直接登录！');\r\n            //     }\r\n            // }\r\n        }\r\n    },\r\n    // mounted() {\r\n    //     this.$store.commit('GETUSER')\r\n    //     for (let item of matchRoutes(this.$store.state.UserStore.auth, dynamicRoutes)) {\r\n    //         this.$router.addRoute(item)\r\n    //     }\r\n    // },\r\n}\r\n</script>\r\n\r\n\r\n<style scoped lang=\"less\">\r\n    .login {\r\n        display: flex;\r\n        justify-content: center;\r\n\r\n        .container {\r\n            width: 25rem;\r\n            height: 25rem;\r\n            margin-top: 10rem;\r\n        }\r\n    }\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyLogin.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyLogin.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MyLogin.vue?vue&type=template&id=e0c11354&scoped=true\"\nimport script from \"./MyLogin.vue?vue&type=script&lang=js\"\nexport * from \"./MyLogin.vue?vue&type=script&lang=js\"\nimport style0 from \"./MyLogin.vue?vue&type=style&index=0&id=e0c11354&prod&scoped=true&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e0c11354\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","model","value","activeName","callback","$$v","expression","ref","loginAccount","loginPwd","_n","on","Login","_v","$event","$router","replace","path","setupAccount","setupPwd","setup","staticRenderFns","name","data","methods","user","account","pwd","res","$store","dispatch","item","matchRoutes","state","UserStore","auth","dynamicRoutes","addRoute","$message","success","error","component"],"sourceRoot":""}